// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  //output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User {
  id               Int      @id @default(autoincrement())
  email            String   @unique
  password         String
  nickname         String   @unique
  sido             String
  gungu            String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Post {
  id                Int        @id @default(autoincrement())
  userId            Int
  user              User       @relation(fields: [userId], references: [id])
  date              DateTime
  si                String?
  gungu             String?
  apparent_temp     Float?
  apparent_humidity Float?
  weather           Weather?   @relation(fields: [id], references: [looktodayId])
  isPublic          Boolean
  comment           String?    @db.VarChar(40)
  images            Image[]    // 1:N with Image
  likes             Like[]     // 1:N with Like

  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
}

model Image {
  id         Int    @id @default(autoincrement())
  imgUrl     String @db.VarChar(1000)
  postId     Int
  post       Post   @relation(fields: [postId], references: [id])
}

model Like {
  id         Int    @id @default(autoincrement())
  postId     Int
  userId     Int
  post       Post   @relation(fields: [postId], references: [id])
  user       User   @relation(fields: [userId], references: [id])
}

model Weather {
  looktodayId Int    @id
  field1      String? // 실제 컬럼명 알 수 없어 임시로 작성
  field2      String? // 실제 컬럼명 알 수 없어 임시로 작성

  post        Post    @relation(fields: [looktodayId], references: [id])
}